AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3


# Try using parameters for 
  # Domain name (CNAME), s3 domain name 
  # HostedZoneId => route53 





Resources:

  MyWebsite:
    Type: AWS::S3::Bucket 
    Properties: 
      AccessControl: PublicRead 
      WebsiteConfiguration:
        IndexDocument: index.html 
      BucketName: oab-crc-website

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyBucketPolicy
        Version: 2012-10-17
        Statement:
        - Sid: PublicReadForGetObjects
          Effect: Allow 
          Principal: "*"
          Action: "s3:GetObject"
          Resource: !Join 
          - ""
          - - "arn:aws:s3:::"
            - !Ref MyWebsite 
            - /*
      Bucket: !Ref MyWebsite 


  MyRoute53Record: 
    Type: "AWS::Route53::RecordSetGroup"
    Properties: 
      HostedZoneId: Z0909871FLCNHCEHWTF1 
      RecordSets:
        - Name: oabcloudresumechallenge.com
          Type: A 
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2  # default zone ID for cloudfront distributions 
            DNSName: !GetAtt MyDistribution.DomainName 


  MyCertificate: 
    Type: AWS::CertificateManager::Certificate
    Properties: 
      DomainName: oabcloudresumechallenge.com
      DomainValidationOptions:
       - DomainName: oabcloudresumechallenge.com
         HostedZoneId: Z0909871FLCNHCEHWTF1
      ValidationMethod: DNS  

  # To be implemented in subsequent versions 
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties: 
      OriginAccessControlConfig: 
        Description: "Default Origin Access Control"
        Name: !Ref AWS::StackName
        OriginAccessControlOriginType: s3
        SigningBehavior: always 
        SigningProtocol: sigv4 
      

  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties: 
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:216761891772:certificate/32656f1c-e651-4d89-9741-15c7e9b5cf3d
          SslSupportMethod: sni-only 
          MinimumProtocolVersion: TLSv1.2_2018
        Aliases:
          - oabcloudresumechallenge.com 
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https 
          TargetOriginId: oab-crc-website.s3-website.eu-west-2.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins: 
          - DomainName: oab-crc-website.s3.eu-west-2.amazonaws.com
            Id: oab-crc-website.s3-website.eu-west-2.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: true
        DefaultRootObject: index.html 


  LambdaFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable
      Architectures:
        - x86_64
      
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get

  DynamoDBTable:
    Type: AWS::Serverless::SimpleTable
    Properties:  
      TableName: VisitorCount 
      

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  
  EndpointUrl:
    Description: 'HTTP REST endpoint URL'
    Value:  !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"

  CloudfrontDomainName: 
    Description: 'Cloudfront domain name'
    Value: !GetAtt MyWebsite.DomainName

  
  # HelloWorldApi:
  #  Description: "API Gateway endpoint URL for Prod stage for Hello World function"
  #  Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  #HelloWorldFunction:
  #  Description: "Hello World Lambda Function ARN"
  #  Value: !GetAtt HelloWorldFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: "Implicit IAM Role created for Hello World function"
  #  Value: !GetAtt HelloWorldFunctionRole.Arn
